/*! beyondtabletop - v0.0.1 - 2014-09-12 */"use strict";(function(){angular.module("bttServices",[]),angular.module("bttDirectives",[]),angular.module("bttControllers",["bttServices"])})();var CONFIG={clientId:"787699769557-bor27v18vetnnpkdfqvbjqsq858r0vrq.apps.googleusercontent.com",scopes:["profile","email","https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/drive.install"]},app={};app.module=angular.module("beyondtabletop",["bttControllers","bttServices","bttDirectives"]),app.module.value("config",CONFIG),app.loadFile=function(e,a){e.current.params;var t=e.current.params.user;return a.requireAuth(!0,t).then(function(){return a.getDocument(id)})},app.loadFile.$inject=["$route","bttStorageService"],app.module.run(["$rootScope","bttStorageService",function(e,a){e.error=!1,e.$on("btt.token_refresh_required",function(){a.requireAuth(!0).then(function(){},function(){})})}]),gapi.load("auth:client,drive-realtime,drive-share",function(){gapi.auth.init(),gapi.client.load("oauth2","v2",function(){gapi.client.load("drive","v2",function(){new CharacterModelPathfinder,new BattleMapModel,new DungeonModel,jQuery(document).ready(function(){angular.bootstrap(document,["beyondtabletop"])})})})});var BTTDungeonSchema={name:"Default",fog:!1,tiles:[]},BTTMapSchema={version:8,details:{size:{width:4e3,height:4e3},tile_size:40,active_token:0,round:1,position:{top:-1e3,left:-1e3},image:""},tokens:[{size:{width:40,height:40,name:"medium"},label:"A",color:"black",image:"",moving:!1,fog:!1,position:{top:1360,left:1560},damage:0,init:0,status:"",active:!0}],shapes:[{size:{width:80,height:80,name:null},round:!1,color:"black",image:"",moving:!1,fog:!1,pinned:!1,tiled:!1,position:{top:1400,left:1600}}]};BTTMapSchema.getTokens=function(){return BTTMapSchema.tokens};var BTTSheetSchema={version:1,name:"",basic:{race:"Human",size:"Medium",xp:0,xp_next:1e3,progression:"Medium"},klasses:[{klass:"Fighter",level:1}],profile:[{name:"Alignment",value:""},{name:"Deity",value:""},{name:"Homeland",value:""},{name:"Gender",value:""},{name:"Age",value:""},{name:"Height",value:""},{name:"Weight",value:""},{name:"Hair",value:""},{name:"Eyes",value:""}],abilities:{STR:{misc:0,value:10,mod:0,auto:0},DEX:{misc:0,value:10,mod:0,auto:0},CON:{misc:0,value:10,mod:0,auto:0},INT:{misc:0,value:10,mod:0,auto:0},WIS:{misc:0,value:10,mod:0,auto:0},CHA:{misc:0,value:10,mod:0,auto:0}},saves:[{name:"FORT",misc:0,base:0,ability:"CON",auto:0},{name:"REF",misc:0,base:0,ability:"DEX",auto:0},{name:"WILL",misc:0,base:0,ability:"WIS",auto:0}],combat:{hp:{value:0,damage:0,misc:0,auto:0},dr:{value:""},sr:{value:0,auto:0},speed:{base:30,armor:10,fly:0,swim:0,climb:0,burrow:0,auto:0},init:{misc:0,auto:0},ac:{armor:0,shield:0,natural:0,deflection:0,misc:0,auto:0},bab:{value:"0"},cmb:{misc:0,auto:0},cmd:{misc:0,auto:0},attack:{misc:0,melee:0,ranged:0,full:0,standard:0,mainhand:0,offhand:0},damage:{misc:0,melee:0,ranged:0,full:0,standard:0,mainhand:0,offhand:0},style:"None",mainhand:"",offhand:"",all_saves:0,all_skills:0},skills:[{name:"Acrobatics",ability:"DEX",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Appraise",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Bluff",ability:"CHA",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Climb",ability:"STR",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Craft",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Diplomacy",ability:"CHA",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Disable Device",ability:"DEX",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Disguise",ability:"CHA",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Escape Artist",ability:"DEX",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Fly",ability:"DEX",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Handle Animal",ability:"CHA",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Heal",ability:"WIS",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Intimidate",ability:"CHA",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Knowledge Arcana",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Knowledge Dungeoneering",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Knowledge Engineering",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Knowledge Geography",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Knowledge History",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Knowledge Local",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Knowledge Nature",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Knowledge Nobility",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Knowledge Planes",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Knowledge Religion",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Linguistics",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Perception",ability:"WIS",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Perform",ability:"CHA",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Profession",ability:"WIS",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Ride",ability:"DEX",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Sense Motive",ability:"WIS",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Sleight of Hand",ability:"DEX",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Spellcraft",ability:"INT",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Stealth",ability:"DEX",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Survival",ability:"WIS",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Swim",ability:"STR",ranks:0,misc:0,auto:0,class_skill:!1},{name:"Use Magic Device",ability:"CHA",ranks:0,misc:0,auto:0,class_skill:!1}],weapons:[],armor:[],lists:[{name:"Languages",overview:!1,content:[]},{name:"Traits",overview:!1,content:[]},{name:"Special Abilities",overview:!1,content:[]}],consumables:[],custom_stats:[],spells:{spellbook:[[],[],[],[],[],[],[],[],[],[]]},feats:[],conditions:[],core_conditions:{blinded:!1,confused:!1,cowering:!1,dazed:!1,dazzled:!1,deafened:!1,entangled:!1,exhausted:!1,fascinated:!1,fatigued:!1,frightened:!1,grappled:!1,haste:!1,nauseated:!1,panicked:!1,paralyzed:!1,pinned:!1,shaken:!1,sickened:!1,staggered:!1,stunned:!1},attacks:[],prefs:{tab:0,help:!0},getKlasses:function(){return[]},getArmor:function(){return[]},getWeapons:function(){return[]},getConditions:function(){return[]},getConsumables:function(){return[]},getAttacks:function(){return[]},clearAttacks:function(){return""}};app.module.config(["$interpolateProvider",function(e){e.startSymbol("[["),e.endSymbol("]]")}]),angular.module("bttControllers").controller("battleMapController",["$scope","$http","$location","$window","$q","bttStorageService",function(e,a,t,s,o,i){var n,r=function(a){var t=o.defer(),s="";return i.setDocumentModel("battlemap","BattleMap"),i.requireAuth(!0,s).then(function(){if(a)t.resolve(i.getDocument(a));else{var s="New BattleMap.btt";t.resolve(i.createDocument(s))}i.listPermissions(a,function(a){e.permissions=a,e.doIOwnThisMap()})}),t.promise},c=t.absUrl().split("/");c.length>1&&(n=c[4]);var l=r(n);l.then(function(a){if(void 0===a.getModel)return s.location.href="/battlemap/"+a.id,void 0;var t=a.getModel(),o=t.getRoot().get("battlemap");e.collaborators=a.getCollaborators(),e.battlemap=o,a.addEventListener(gapi.drive.realtime.EventType.COLLABORATOR_JOINED,function(){e.collaborators=a.getCollaborators()}),a.addEventListener(gapi.drive.realtime.EventType.COLLABORATOR_LEFT,function(){e.collaborators=a.getCollaborators()}),console.log("battlemap loaded"),e.ready=!0},function(e){console.log(e),console.log("Document Load Failed.")}),e.collaborators=[],e.permissions=[],e.battlemap=BTTMapSchema,console.log("schema loaded"),e.ready=!1,e.selection={sizes:[{name:"Medium",value:"medium"},{name:"Large",value:"large"},{name:"Huge",value:"huge"},{name:"Gargantuan",value:"gargantuan"},{name:"Colossal",value:"colossal"}]},e.toolbar={activeItem:null},e.nav_status="visible",e.locals={show_details:!1,map_owner:!1,current_position:{left:-1200,top:-1200},default_position:{left:-1200,top:-1200}},e.getCollaborators=function(){return e.collaborators},e.doIOwnThisMap=function(){var a=_.findWhere(e.permissions,{emailAddress:BTT_CURRENT_GOOGLE_EMAIL});"owner"===a.role&&(e.locals.map_owner=!0)},e.remove=function(e,a){e.remove(a)},e.selectItem=function(a){e.toolbar.activeItem=a},e.getLabelInitial=function(e){return e.toUpperCase().charAt(0)},e.getRandomColor=function(){var e=["red","blue","green","purple","orange","brown","teal"];return e[Math.floor(Math.random()*e.length)]},e.getCurrentPosition=function(){var a=Math.abs(e.locals.current_position.top),t=Math.abs(e.locals.current_position.left),s={top:40*(Math.floor(a/40)+2),left:40*(Math.floor(t/40)+12)};return s},e.getTokenClasses=function(a){var t=[];return""===a.image?t.push("token-type"):t.push("sprite-type"),a.moving&&t.push("moving"),_.isEqual(e.toolbar.activeItem,a)&&t.push("selected"),t.push(a.size.name),t.join(" ")},e.getShapeClasses=function(a){var t=[];return""!==a.image&&t.push("bg-image"),a.moving&&t.push("moving"),a.round?t.push("round"):t.push("square"),a.pinned&&t.push("pinned"),a.tiled&&t.push("tiled"),_.isEqual(e.toolbar.activeItem,a)&&t.push("selected"),t.join(" ")},e.goToCenter=function(){e.locals.current_position.top=e.locals.default_position.top,e.locals.current_position.left=e.locals.default_position.left,$("#map").css({top:e.locals.default_position.top,left:e.locals.default_position.left})},e.setCenter=function(){e.locals.default_position.top=e.battlemap.details.position.top,e.locals.default_position.left=e.battlemap.details.position.left},e.editMapDetails=function(){e.locals.show_details=!e.locals.show_details},e.getMapBackground=function(){var a=e.battlemap.details.image;return""===a?'"/img/square-sprite.png"':"url("+a+")"},e.addToken=function(a){a=a||{size:{width:40,height:40,name:"medium"},label:"A",color:e.getRandomColor(),image:"",moving:!1,position:e.getCurrentPosition(),damage:0,init:0,status:"",active:!1},e.battlemap.addToken(a),1===e.battlemap.tokens.length&&(e.battlemap.tokens.get(0).active=!0)},e.addShape=function(a){a=a||{size:{width:80,height:80},round:!1,color:e.getRandomColor(),image:"",moving:!1,position:e.getCurrentPosition()},e.battlemap.addShape(a)},e.deleteItem=function(a){var t=-1;void 0===a.round?(t=_.indexOf(e.battlemap.getTokens(),a),e.remove(e.battlemap.tokens,t)):(t=_.indexOf(e.battlemap.getShapes(),a),e.remove(e.battlemap.shapes,t)),a.active&&e.battlemap.tokens.length>0&&(e.battlemap.tokens.get(0).active=!0),e.toolbar.activeItem=null},e.ifActiveItemIsToken=function(){return null===e.toolbar.activeItem?!1:void 0===e.toolbar.activeItem.round},e.ifActiveItemIsShape=function(){return null===e.toolbar.activeItem?!1:void 0===e.toolbar.activeItem.damage},e.copyItem=function(a){void 0===a.round?e.addToken(a):e.addShape(a)},e.toggleNavStatus=function(){e.nav_status="collapsed"===e.nav_status?"visible":"collapsed"},e.logTokens=function(a){var t=a||e.battlemap.getTokens(),s="";for(var o in t)o=parseInt(o),s=s+t[o].label+", ";console.log(s)},e.getActiveToken=function(){return e.battlemap.tokens.get(e.battlemap.details.active_token)},e.advanceTurn=function(a){var t=e.battlemap.getTokens(),s=e.battlemap.getTokens();t.sort(function(e,a){return a.init-e.init});var o=_.findWhere(s,{active:!0}),i=_.findWhere(t,{active:!0}),n=_.indexOf(s,o),r=_.indexOf(t,i);if(void 0===o)return e.battlemap.tokens.get(0).active=!0,void 0;e.battlemap.tokens.get(n).active=!1;var c=r+a;c===t.length&&(c=0,e.battlemap.details.round=e.battlemap.details.round+1),-1===c&&(c=t.length-1,e.battlemap.details.round=e.battlemap.details.round-1);var l=t[c],d=_.indexOf(s,l);e.battlemap.tokens.get(d).active=!0}}]),angular.module("bttControllers").controller("characterController",["$scope","$http","$sce","$location","$window","$q","bttStorageService",function($scope,$http,$sce,$location,$window,$q,bttStorageService){var getDocument=function(e){var a=$q.defer(),t="";return bttStorageService.setDocumentModel("character","Character"),bttStorageService.requireAuth(!0,t).then(function(){if(e)a.resolve(bttStorageService.getDocument(e));else{var t="New Character.btt";a.resolve(bttStorageService.createDocument(t))}}),a.promise},documentId,pathParts=$location.absUrl().split("/");pathParts.length>1&&(documentId=pathParts[4]);var document=getDocument(documentId);document.then(function(e){if(void 0===e.getModel)return $window.location.href="/sheet/"+e.id,void 0;var a=e.getModel(),t=a.getRoot().get("character");$scope.character=t,console.log("character loaded"),$scope.loadData()},function(){console.log("Document Load Failed.")}),$scope.gdoc=document,$scope.character=BTTSheetSchema,console.log("schema loaded"),$scope.selection={level:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],klass:["Alchemist","Antipaladin","Barbarian","Bard","Cavalier","Cleric","Druid","Fighter","Gunslinger","Inquisitor","Magus","Monk","Ninja","Oracle","Paladin","Ranger","Rogue","Samurai","Sorcerer","Summoner","Witch","Wizard","Arcane Archer","Arcane Trickster","Assassin","Dragon Disciple","Duelist","Eldritch Knight","Loremaster","Mystic Theurge","Pathfinder Chronicler","Shadowdancer","Adept","Aristocrat","Commoner","Expert","Warrior"],race:["Human","Half-Orc","Elf","Half-Elf","Dwarf","Gnome","Halfling"],size:["Medium","Small","Large"],size_mod:[0,-1,1],progression:["Slow","Medium","Fast"],advancement:{Slow:[0,3e3,7500,14e3,23e3,35e3,53e3,77e3,115e3,16e4,235e3,33e4,475e3,665e3,955e3,135e4,19e5,27e5,385e4,535e4],Medium:[0,2e3,5e3,9e3,15e3,23e3,35e3,51e3,75e3,105e3,155e3,22e4,315e3,445e3,635e3,89e4,13e5,18e5,255e4,36e5],Fast:[0,1300,3300,6e3,1e4,15e3,23e3,34e3,5e4,71e3,105e3,145e3,21e4,295e3,425e3,6e5,85e4,12e5,17e5,24e5]},abilities:["STR","DEX","CON","INT","WIS","CHA"],weapon:{type:["--","Bludgeoning","Piercing","Slashing","Ranged"],crit_mult:["x2","x3","x4","x5"],crit_range:["20","19-20","18-20","17-20","16-20","15-20"]},armor:{type:["Armor","Shield","Magic","Other"]},styles:["None","Wielding Two-Handed","Two-Weapon Fighting"],spellClasses:[{name:"Alchemist",id:"alchemist"},{name:"Antipaladin",id:"antipaladin"},{name:"Bard",id:"bard"},{name:"Cleric",id:"cleric"},{name:"Druid",id:"druid"},{name:"Inquisitor",id:"inquisitor"},{name:"Magus",id:"magus"},{name:"Oracle",id:"oracle"},{name:"Paladin",id:"paladin"},{name:"Ranger",id:"ranger"},{name:"Sorcerer",id:"sor"},{name:"Summoner",id:"summoner"},{name:"Witch",id:"witch"},{name:"Wizard",id:"wiz"}],conditionStats:[{name:"STR",path:"abilities.STR.auto"},{name:"DEX",path:"abilities.DEX.auto"},{name:"CON",path:"abilities.CON.auto"},{name:"INT",path:"abilities.INT.auto"},{name:"WIS",path:"abilities.WIS.auto"},{name:"CHA",path:"abilities.CHA.auto"},{name:"All Saves",path:"combat.all_saves"},{name:"FORT",path:"saves.0.auto"},{name:"REF",path:"saves.1.auto"},{name:"WILL",path:"saves.2.auto"},{name:"HP",path:"combat.hp.auto"},{name:"SR",path:"combat.sr.auto"},{name:"CMB",path:"combat.cmb.auto"},{name:"CMD",path:"combat.cmd.auto"},{name:"Speed",path:"combat.speed.auto"},{name:"Initiative",path:"combat.init.auto"},{name:"AC",path:"combat.ac.auto"},{name:"Dex Bonus to AC",path:"combat.ac.dex"},{name:"Attack",path:"combat.attack.misc"},{name:"Melee Attack",path:"combat.attack.melee"},{name:"Ranged Attack",path:"combat.attack.ranged"},{name:"Full Attack",path:"combat.attack.full"},{name:"Standard Attack",path:"combat.attack.standard"},{name:"Mainhand Attack",path:"combat.attack.mainhand"},{name:"Offhand Attack",path:"combat.attack.offhand"},{name:"Damage",path:"combat.damage.misc"},{name:"Melee Damage",path:"combat.damage.melee"},{name:"Ranged Damage",path:"combat.damage.ranged"},{name:"Full Attack Damage",path:"combat.damage.full"},{name:"Standard Attack Damage",path:"combat.damage.standard"},{name:"Mainhand Damage",path:"combat.damage.mainhand"},{name:"Offhand Damage",path:"combat.damage.offhand"},{name:"All Skills",path:"combat.all_skills"},{name:"Acrobatics",path:"skills.0.auto"},{name:"Appraise",path:"skills.1.auto"},{name:"Bluff",path:"skills.2.auto"},{name:"Climb",path:"skills.3.auto"},{name:"Craft",path:"skills.4.auto"},{name:"Diplomacy",path:"skills.5.auto"},{name:"Disable Device",path:"skills.6.auto"},{name:"Disguise",path:"skills.7.auto"},{name:"Escape Artist",path:"skills.8.auto"},{name:"Fly",path:"skills.9.auto"},{name:"Handle Animal",path:"skills.10.auto"},{name:"Heal",path:"skills.11.auto"},{name:"Intimidate",path:"skills.12.auto"},{name:"Knowledge Arcana",path:"skills.13.auto"},{name:"Knowledge Dungeoneering",path:"skills.14.auto"},{name:"Knowledge Engineering",path:"skills.15.auto"},{name:"Knowledge Geography",path:"skills.16.auto"},{name:"Knowledge History",path:"skills.17.auto"},{name:"Knowledge Local",path:"skills.18.auto"},{name:"Knowledge Nature",path:"skills.19.auto"},{name:"Knowledge Nobility",path:"skills.20.auto"},{name:"Knowledge Planes",path:"skills.21.auto"},{name:"Knowledge Religion",path:"skills.22.auto"},{name:"Linguistics",path:"skills.23.auto"},{name:"Perception",path:"skills.24.auto"},{name:"Perform",path:"skills.25.auto"},{name:"Profession",path:"skills.26.auto"},{name:"Ride",path:"skills.27.auto"},{name:"Sense Motive",path:"skills.28.auto"},{name:"Sleight of Hand",path:"skills.29.auto"},{name:"Spellcraft",path:"skills.30.auto"},{name:"Stealth",path:"skills.31.auto"},{name:"Survival",path:"skills.32.auto"},{name:"Swim",path:"skills.33.auto"},{name:"Use Magic Device",path:"skills.34.auto"}],spell_levels:[0,1,2,3,4,5,6,7,8,9]},$scope.data={klass:{},conditions:[{name:"blinded",text:$sce.trustAsHtml("<p>The creature cannot see. It takes a –2 penalty to Armor Class, loses its Dexterity bonus to AC (if any), and takes a –4 penalty on most Strength- and Dexterity-based skill checks and on opposed Perception skill checks. All checks and activities that rely on vision (such as reading and Perception checks based on sight) automatically fail.</p><p>All opponents are considered to have total concealment (50% miss chance) against the blinded character. Blind creatures must make a DC 10 Acrobatics skill check to move faster than half speed. Creatures that fail this check fall prone. Characters who remain blinded for a long time grow accustomed to these drawbacks and can overcome some of them.</p>")},{name:"confused",text:$sce.trustAsHtml("<p>A confused creature is mentally befuddled and cannot act normally. A confused creature cannot tell the difference between ally and foe, treating all creatures as enemies. Allies wishing to cast a beneficial spell that requires a touch on a confused creature must succeed on a melee touch attack. If a confused creature is attacked, it attacks the creature that last attacked it until that creature is dead or out of sight.</p>")},{name:"cowering",text:$sce.trustAsHtml("<p>The character is frozen in fear and can take no actions. A cowering character takes a –2 penalty to Armor Class and loses his Dexterity bonus (if any).</p>")},{name:"dazed",text:$sce.trustAsHtml("<p>The creature is unable to act normally. A dazed creature can take no actions, but has no penalty to AC. A dazed condition typically lasts 1 round.</p>")},{name:"dazzled",text:$sce.trustAsHtml("<p>The creature is unable to see well because of overstimulation of the eyes. A dazzled creature takes a –1 penalty on attack rolls and sight-based Perception checks.</p>")},{name:"deafened",text:$sce.trustAsHtml("<p>A deafened character cannot hear. He takes a –4 penalty on initiative checks, automatically fails Perception checks based on sound, takes a –4 penalty on opposed Perception checks, and has a 20% chance of spell failure when casting spells with verbal components. Characters who remain deafened for a long time grow accustomed to these drawbacks and can overcome some of them.</p>")},{name:"entangled",text:$sce.trustAsHtml("<p>The character is ensnared. Being entangled impedes movement, but does not entirely prevent it unless the bonds are anchored to an immobile object or tethered by an opposing force. An entangled creature moves at half speed, cannot run or charge, and takes a –2 penalty on all attack rolls and a –4 penalty to Dexterity. An entangled character who attempts to cast a spell must make a concentration check (DC 15 + spell level) or lose the spell.</p>")},{name:"exhausted",text:$sce.trustAsHtml("<p>An exhausted character moves at half speed, cannot run or charge, and takes a –6 penalty to Strength and Dexterity. After 1 hour of complete rest, an exhausted character becomes fatigued. A fatigued character becomes exhausted by doing something else that would normally cause fatigue.</p>")},{name:"fascinated",text:$sce.trustAsHtml("<p>A fascinated creature is entranced by a supernatural or spell effect. The creature stands or sits quietly, taking no actions other than to pay attention to the fascinating effect, for as long as the effect lasts. It takes a –4 penalty on skill checks made as reactions, such as Perception checks. Any potential threat, such as a hostile creature approaching, allows the fascinated creature a new saving throw against the fascinating effect. Any obvious threat, such as someone drawing a weapon, casting a spell, or aiming a ranged weapon at the fascinated creature, automatically breaks the effect. A fascinated creature's ally may shake it free of the spell as a standard action.</p>")},{name:"fatigued",text:$sce.trustAsHtml("<p>A fatigued character can neither run nor charge and takes a –2 penalty to Strength and Dexterity. Doing anything that would normally cause fatigue causes the fatigued character to become exhausted. After 8 hours of complete rest, fatigued characters are no longer fatigued.</p>")},{name:"frightened",text:$sce.trustAsHtml("<p>A frightened creature flees from the source of its fear as best it can. If unable to flee, it may fight. A frightened creature takes a –2 penalty on all attack rolls, saving throws, skill checks, and ability checks. A frightened creature can use special abilities, including spells, to flee; indeed, the creature must use such means if they are the only way to escape.</p><p>Frightened is like shaken, except that the creature must flee if possible. Panicked is a more extreme state of fear.</p>")},{name:"grappled",text:$sce.trustAsHtml("<p>A grappled creature is restrained by a creature, trap, or effect. Grappled creatures cannot move and take a –4 penalty to Dexterity. A grappled creature takes a –2 penalty on all attack rolls and combat maneuver checks, except those made to grapple or escape a grapple. In addition, grappled creatures can take no action that requires two hands to perform. A grappled character who attempts to cast a spell or use a spell-like ability must make a concentration check (DC 10 + grappler's CMB + spell level), or lose the spell. Grappled creatures cannot make attacks of opportunity.</p>")},{name:"haste",text:$sce.trustAsHtml("<p>The transmuted creatures move and act more quickly than normal. This extra speed has several effects. When making a full attack action, a hasted creature may make one extra attack with one natural or manufactured weapon. The attack is made using the creature's full base attack bonus, plus any modifiers appropriate to the situation. (This effect is not cumulative with similar effects, such as that provided by a speed weapon, nor does it actually grant an extra action, so you can't use it to cast a second spell or otherwise take an extra action in the round.)</p><p>A hasted creature gains a +1 bonus on attack rolls and a +1 dodge bonus to AC and Reflex saves. Any condition that makes you lose your Dexterity bonus to Armor Class (if any) also makes you lose dodge bonuses.</p><p>All of the hasted creature's modes of movement (including land movement, burrow, climb, fly, and swim) increase by 30 feet, to a maximum of twice the subject's normal speed using that form of movement. This increase counts as an enhancement bonus, and it affects the creature's jumping distance as normal for increased speed. Multiple haste effects don't stack. Haste dispels and counters slow.</p>")},{name:"nauseated",text:$sce.trustAsHtml("<p>Creatures with the nauseated condition experience stomach distress. Nauseated creatures are unable to attack, cast spells, concentrate on spells, or do anything else requiring attention. The only action such a character can take is a single move action per turn.</p>")},{name:"panicked",text:$sce.trustAsHtml("<p>A panicked creature must drop anything it holds and flee at top speed from the source of its fear, as well as any other dangers it encounters, along a random path. It can't take any other actions. In addition, the creature takes a –2 penalty on all saving throws, skill checks, and ability checks. If cornered, a panicked creature cowers and does not attack, typically using the total defense action in combat. A panicked creature can use special abilities, including spells, to flee; indeed, the creature must use such means if they are the only way to escape.</p><p>Panicked is a more extreme state of fear than shaken or frightened.</p>")},{name:"paralyzed",text:$sce.trustAsHtml("<p>A paralyzed character is frozen in place and unable to move or act. A paralyzed character has effective Dexterity and Strength scores of 0 and is helpless, but can take purely mental actions. A winged creature flying in the air at the time that it becomes paralyzed cannot flap its wings and falls. A paralyzed swimmer can't swim and may drown. A creature can move through a space occupied by a paralyzed creature—ally or not. Each square occupied by a paralyzed creature, however, counts as 2 squares to move through.</p>")},{name:"pinned",text:$sce.trustAsHtml("<p>A pinned creature is tightly bound and can take few actions. A pinned creature cannot move and is denied its Dexterity bonus. A pinned character also takes an additional –4 penalty to his Armor Class. A pinned creature is limited in the actions that it can take. A pinned creature can always attempt to free itself, usually through a combat maneuver check or Escape Artist check. A pinned creature can take verbal and mental actions, but cannot cast any spells that require a somatic or material component. A pinned character who attempts to cast a spell or use a spell-like ability must make a concentration check (DC 10 + grappler's CMB + spell level) or lose the spell. Pinned is a more severe version of grappled, and their effects do not stack.</p>")},{name:"shaken",text:$sce.trustAsHtml("<p>A shaken character takes a –2 penalty on attack rolls, saving throws, skill checks, and ability checks. Shaken is a less severe state of fear than frightened or panicked.</p>")},{name:"sickened",text:$sce.trustAsHtml("<p>The character takes a –2 penalty on all attack rolls, weapon damage rolls, saving throws, skill checks, and ability checks.</p>")},{name:"staggered",text:$sce.trustAsHtml("<p>A staggered creature may take a single move action or standard action each round (but not both, nor can he take full-round actions). A staggered creature can still take free, swift, and immediate actions. A creature with nonlethal damage exactly equal to its current hit points gains the staggered condition.</p>")},{name:"stunned",text:$sce.trustAsHtml("<p>A stunned creature drops everything held, can't take actions, takes a –2 penalty to AC, and loses its Dexterity bonus to AC (if any). Attackers receive a +4 bonus on attack rolls to perform combat maneuvers against a stunned opponent.</p>")}],conditions_by_stat:{ability:{STR:{fatigued:-2,exhausted:-6},DEX:{fatigued:-2,exhausted:-6,entangled:-4,grappled:-4}},save:{FORT:{frightened:-2,panicked:-2,shaken:-2,sickened:-2},REF:{frightened:-2,panicked:-2,shaken:-2,sickened:-2,haste:1},WILL:{frightened:-2,panicked:-2,shaken:-2,sickened:-2}},skill:{blind:-4,frightened:-2,panicked:-2,shaken:-2,sickened:-2},ac:{haste:1,blinded:-2,cowering:-2,pinned:-4,stunned:-2},dex_to_ac:{blinded:0,cowering:0,stunned:0},cmb:{grappled:-2},cmd:{grappled:-2},attack:{haste:1,blinded:"50% miss chance",dazzled:-1,entangled:-2,frightened:-2,grappled:-2,shaken:-2,sickened:-2},damage:{sickened:-2}},alterations_by_stat:{ability:{},save:{divine_grace:{text:" for Divine Grace",value:0}},skill:{armor:{text:" for armor penalties",value:0}},dex_to_ac:{armor:{text:" is max dex for your equipped armor",value:0}},full_attack:{two_weapon:{text:" for wielding two weapons",value:0}}},custom_conditions_by_stat:{ability:{STR:["abilities.STR.auto"],DEX:["abilities.DEX.auto"],CON:["abilities.CON.auto"],INT:["abilities.INT.auto"],WIS:["abilities.WIS.auto"],CHA:["abilities.CHA.auto"]},save:{FORT:["saves.0.auto","combat.all_saves"],REF:["saves.1.auto","combat.all_saves"],WILL:["saves.2.auto","combat.all_saves"]},skill:{Acrobatics:["skills.0.auto","combat.all_skills"],Appraise:["skills.1.auto","combat.all_skills"],Bluff:["skills.2.auto","combat.all_skills"],Climb:["skills.3.auto","combat.all_skills"],Craft:["skills.4.auto","combat.all_skills"],Diplomacy:["skills.5.auto","combat.all_skills"],"Disable Device":["skills.6.auto","combat.all_skills"],Disguise:["skills.7.auto","combat.all_skills"],"Escape Artist":["skills.8.auto","combat.all_skills"],Fly:["skills.9.auto","combat.all_skills"],"Handle Animal":["skills.10.auto","combat.all_skills"],Heal:["skills.11.auto","combat.all_skills"],Intimidate:["skills.12.auto","combat.all_skills"],"Knowledge Arcana":["skills.13.auto","combat.all_skills"],"Knowledge Dungeoneering":["skills.14.auto","combat.all_skills"],"Knowledge Engineering":["skills.15.auto","combat.all_skills"],"Knowledge Geography":["skills.16.auto","combat.all_skills"],"Knowledge History":["skills.17.auto","combat.all_skills"],"Knowledge Local":["skills.18.auto","combat.all_skills"],"Knowledge Nature":["skills.19.auto","combat.all_skills"],"Knowledge Nobility":["skills.20.auto","combat.all_skills"],"Knowledge Planes":["skills.21.auto","combat.all_skills"],"Knowledge Religion":["skills.22.auto","combat.all_skills"],Linguistics:["skills.23.auto","combat.all_skills"],Perception:["skills.24.auto","combat.all_skills"],Perform:["skills.25.auto","combat.all_skills"],Profession:["skills.26.auto","combat.all_skills"],Ride:["skills.27.auto","combat.all_skills"],"Sense Motive":["skills.28.auto","combat.all_skills"],"Sleight of Hand":["skills.29.auto","combat.all_skills"],Spellcraft:["skills.30.auto","combat.all_skills"],Stealth:["skills.31.auto","combat.all_skills"],Survival:["skills.32.auto","combat.all_skills"],Swim:["skills.33.auto","combat.all_skills"],"Use Magic Device":["skills.34.auto","combat.all_skills"]},hp:["combat.hp.auto"],sr:["combat.sr.auto"],cmb:["combat.cmb.auto"],cmd:["combat.cmd.auto"],speed:["combat.speed.auto"],init:["combat.init.auto"],ac:["combat.ac.auto"],dex_to_ac:["combat.ac.dex"],full_attack_with_ranged:["combat.attack.ranged","combat.attack.full","combat.attack.misc"],full_attack_with_melee:["combat.attack.melee","combat.attack.full","combat.attack.misc"],full_attack_with_ranged_mainhand:["combat.attack.mainhand","combat.attack.ranged","combat.attack.full","combat.attack.misc"],full_attack_with_ranged_offhand:["combat.attack.offhand","combat.attack.ranged","combat.attack.full","combat.attack.misc"],full_attack_with_melee_mainhand:["combat.attack.mainhand","combat.attack.melee","combat.attack.full","combat.attack.misc"],full_attack_with_melee_offhand:["combat.attack.offhand","combat.attack.melee","combat.attack.full","combat.attack.misc"],standard_attack_with_ranged:["combat.attack.ranged","combat.attack.standard","combat.attack.misc"],standard_attack_with_melee:["combat.attack.melee","combat.attack.standard","combat.attack.misc"],full_damage_with_ranged:["combat.damage.ranged","combat.damage.full","combat.damage.misc"],full_damage_with_melee:["combat.damage.melee","combat.damage.full","combat.damage.misc"],full_damage_with_ranged_mainhand:["combat.damage.mainhand","combat.damage.ranged","combat.damage.full","combat.damage.misc"],full_damage_with_ranged_offhand:["combat.damage.offhand","combat.damage.ranged","combat.damage.full","combat.damage.misc"],full_damage_with_melee_mainhand:["combat.damage.mainhand","combat.damage.melee","combat.damage.full","combat.damage.misc"],full_damage_with_melee_offhand:["combat.damage.offhand","combat.damage.melee","combat.damage.full","combat.damage.misc"],standard_damage_with_ranged:["combat.damage.ranged","combat.damage.standard","combat.damage.misc"],standard_damage_with_melee:["combat.damage.melee","combat.damage.standard","combat.damage.misc"]},feats:[],spells:[[],[],[],[],[],[],[],[],[],[]],new_spell_level:0,current_spellcaster:"",search:{feats:"",spells:""}},$scope.ready=!1,$scope.tabs={showing_nav:!1,list:["Overview","General","Abilities","Combat","Skills","Gear","Lists","Feats","Spells","Conditions"]},$scope.switchTab=function(e){$scope.character.prefs.tab=e,$(".tab[data-index="+e+"]").addClass("active").siblings().removeClass("active"),$scope.tabs.showing_nav=!1
},$scope.toggleNav=function(){$scope.tabs.showing_nav=!$scope.tabs.showing_nav},$scope.getActiveNavItem=function(){return $scope.tabs.list[$scope.character.prefs.tab]},$scope.toggleHelp=function(){$scope.character.prefs.help=!$scope.character.prefs.help},$scope.finishedLoading=function(){$scope.ready=!0},$scope.basicRemove=function(e,a){e.splice(a,1)},$scope.remove=function(e,a){e.remove(a)},$scope.confirmWithAlert=function(e,a,t){t=t||"Are you sure you want to do this?",window.confirm(t)?e():void 0!==a&&a()},$scope.loadData=function(){$http({url:"/data/classes.json",method:"GET",dataType:"JSON"}).success(function(e){$scope.data.klass=e,$scope.finishedLoading(),$scope.onClassChange()}).error(function(){console.log("whoops")}),$http({url:"/data/feats-crb.json",method:"GET",dataType:"JSON"}).success(function(e){$scope.data.feats=e}).error(function(){console.log("whoops")})},$scope.loadClassSpells=function(e){$scope.data.spells=[[],[],[],[],[],[],[],[],[],[]],$http({url:"/data/spells/"+e+".json",method:"GET",dataType:"JSON"}).success(function(a){$scope.data.spells=a,$scope.data.current_spellcaster=e}).error(function(){console.log("whoops")})},$scope.addKlass=function(){$scope.character.addKlass()},$scope.addSpell=function(e){var a={level:$scope.data.new_spell_level,name:"",description:"",descriptor:"",short_description:"",id:"",source:"player",remaining:0,prepared:0,level_string:"",class_levels:{},elements:[],restrictions:{deity:"",area:"",divine_focus:"",domain:"",school:"",subschool:"",language_dependent:""},casting:{casting_time:"",components:"",costly_components:"",duration:"",effect:"",range:"",saving_throw:"",spell_resistance:"",targets:""}};for(var t in $scope.selection.spellClasses)a.class_levels[$scope.selection.spellClasses[t].id]=$scope.data.new_spell_level;e=e||a,e.prepared=0,e.remaining=0,$scope.character.addSpell($scope.character.spells.spellbook.get(parseInt(e.level)),e)},$scope.addWeapon=function(){$scope.character.addWeapon()},$scope.addArmor=function(){$scope.character.addArmor()},$scope.addList=function(){$scope.character.addList()},$scope.addListItem=function(e){$scope.character.addListItem(e)},$scope.addConsumable=function(){$scope.character.addConsumable()},$scope.addCustomStat=function(){$scope.character.addCustomStat()},$scope.addFeat=function(e){e=e||{name:"",summary:"",prereq:"",text:[{name:"Benefit",text:""},{name:"Normal",text:""},{name:"Special",text:""},{name:"Info",text:""}]},$scope.character.addFeat(e)},$scope.addAttack=function(){$scope.character.addAttack({attack_bonus:0,weapon:"",bab:$scope.getTopBAB()})},$scope.addCondition=function(){$scope.character.addCondition()},$scope.addEffect=function(e){$scope.character.addConditionEffect(e)},$scope.getHighestLevel=function(){var e=1;for(var a in $scope.character.getKlasses())e=Math.max(e,$scope.character.klasses.get(parseInt(a)).level);return e},$scope.getTotalLevel=function(){var e=0;for(var a in $scope.character.getKlasses())e+=$scope.character.klasses.get(parseInt(a)).level;return Math.max(1,e)},$scope.getAllLevelsArray=function(){var e=[];for(var a in $scope.character.getKlasses())e.push($scope.character.klasses.get(parseInt(a)).level);return e},$scope.getLevelsForKlass=function(e){for(var a=$scope.getLevelUpDataForKlass(e)||{levels:[{}]},t=[],s=1;a.levels.length>=s;s++)t.push(s);return t},$scope.getHighestLevelForKlass=function(e){var a=$scope.getLevelUpDataForKlass(e)||{levels:[{}]};return a.levels.length},$scope.getHighestKlass=function(){var e=0,a="";for(var t in $scope.character.getKlasses()){var s=$scope.character.klasses.get(parseInt(t));s.level>=e&&(e=s.level,a=s.klass)}return a},$scope.getAllKlassesArray=function(){var e=[];for(var a in $scope.character.getKlasses())e.push($scope.character.klasses.get(parseInt(a)).klass);return e},$scope.getAllKlasses=function(){var e=$scope.getAllKlassesArray();return e.join(" / ")},$scope.getLevelUpDataForKlass=function(e){return e=e||$scope.getHighestKlass(),$scope.klassDataIsLoaded()?$scope.data.klass[e]:void 0},$scope.getSpellAbilityForKlass=function(e){return e=e||$scope.getHighestKlass(),$scope.klassDataIsLoaded()?$scope.data.klass[e].spell_ability:""},$scope.getClassLevelsInfo=function(){if($scope.klassDataIsLoaded()){var e=_.indexOf($scope.selection.klass,$scope.getHighestKlass());return $scope.data.klass[e].levels}return[]},$scope.getAbilityTotal=function(e,a){var t=0,s=0,o=0;return"DEX"===a&&(t=$scope.character.core_conditions.entangled?-4:0,s=$scope.character.core_conditions.fatigued?-2:0,s=$scope.character.core_conditions.exhausted?-6:s,o=$scope.character.core_conditions.grappled?-4:0),"STR"===a&&(s=$scope.character.core_conditions.fatigued?-2:0,s=$scope.character.core_conditions.exhausted?-6:s),e.value+e.misc+e.auto+t+s+o},$scope.getAbilityMod=function(e){var a=$scope.character.abilities[e];return a.mod=Math.floor(($scope.getAbilityTotal(a,e)-10)/2),a.mod},$scope.getSkillTotal=function(e){var a=0,t=0,s=$scope.character.core_conditions.blinded?-4:0,o=$scope.character.core_conditions.frightened?-2:0,i=$scope.character.core_conditions.panicked?-2:0,n=$scope.character.core_conditions.shaken?-2:0,r=$scope.character.core_conditions.sickened?-2:0;if(e.class_skill&&e.ranks>0&&(a=3),"DEX"===e.ability||"STR"===e.ability){var c=$scope.character.getArmor();for(var l in c){l=parseInt(l);var d=$scope.character.armor.get(l);d.active&&(t+=d.penalty)}t=-1*Math.abs(t),$scope.data.alterations_by_stat.skill.armor.value=t}return e.ranks+e.misc+e.auto+$scope.getAbilityMod(e.ability)+a+$scope.character.combat.all_skills+s+t+o+n+i+r},$scope.getSaveTotal=function(e){var a=0,t=0;"DEX"===e.ability&&(t=$scope.character.core_conditions.haste?1:0);var s=$scope.character.core_conditions.frightened?-2:0,o=$scope.character.core_conditions.panicked?-2:0,i=$scope.character.core_conditions.shaken?-2:0,n=$scope.character.core_conditions.sickened?-2:0;return a+e.base+e.misc+e.auto+$scope.getAbilityMod(e.ability)+$scope.character.combat.all_saves+t+s+i+o+n},$scope.getSizeMod=function(e){return $scope.selection.size_mod[_.indexOf($scope.selection.size,e)]},$scope.getHPFromCON=function(){return $scope.getAbilityMod("CON")*$scope.getTotalLevel()},$scope.getHPRemaining=function(e){return $scope.getHPTotal(e)-Math.abs(e.damage)},$scope.getHPTotal=function(e){return $scope.getHPFromCON()+e.value+e.misc+e.auto},$scope.getTotalInit=function(e){var a=$scope.character.core_conditions.deafened?-4:0;return e.misc+e.auto+$scope.getAbilityMod("DEX")+a},$scope.getTotalAC=function(e){e.dex=$scope.getAbilityMod("DEX");var a=$scope.character.getArmor();for(var t in a){t=parseInt(t);var s=$scope.character.armor.get(t);s.active&&(e.dex=Math.min(e.dex,s.dex))}var o=$scope.character.core_conditions.haste?1:0,i=$scope.character.core_conditions.blinded?-2:0,n=$scope.character.core_conditions.cowering?-2:0,r=$scope.character.core_conditions.pinned?-4:0,c=$scope.character.core_conditions.stunned?-2:0;return $scope.losesDexBonusToAC()&&(e.dex=0),$scope.data.alterations_by_stat.dex_to_ac.armor.value=e.dex<$scope.getAbilityMod("DEX")?e.dex:0,10+e.armor+e.shield+e.natural+e.deflection+e.misc+e.dex+e.auto+o+i+n+r+c},$scope.getFlatAC=function(e){var a=$scope.character.core_conditions.blinded?-2:0,t=$scope.character.core_conditions.cowering?-2:0,s=$scope.character.core_conditions.pinned?-4:0,o=$scope.character.core_conditions.stunned?-2:0;return 10+e.armor+e.shield+e.natural+e.deflection+e.misc+e.auto+a+t+s+o},$scope.getTouchAC=function(e){e.dex=$scope.getAbilityMod("DEX");var a=$scope.character.getArmor();for(var t in a){t=parseInt(t);var s=$scope.character.armor.get(t);s.active&&(e.dex=Math.min(e.dex,s.dex))}var o=$scope.character.core_conditions.haste?1:0,i=$scope.character.core_conditions.blinded?-2:0,n=$scope.character.core_conditions.cowering?-2:0,r=$scope.character.core_conditions.pinned?-4:0,c=$scope.character.core_conditions.stunned?-2:0;return $scope.losesDexBonusToAC()&&(e.dex=0),10+e.misc+e.dex+e.auto+o+i+n+r+c},$scope.getSplitBABs=function(e){var a=e.split("/");for(var t in a)a[t]=parseInt(a[t].trim());return a},$scope.getTopBAB=function(e){return e=e||$scope.character.combat.bab.value,parseInt(e.split("/")[0].trim())},$scope.getBABs=function(){var e=$scope.character.combat.bab.value.split("/");for(var a in e)e[a]=parseInt(e[a].trim());return e},$scope.getTotalCMB=function(e){var a=$scope.character.core_conditions.grappled?-2:0;return $scope.getTopBAB()+$scope.getSizeMod($scope.character.basic.size)+$scope.getAbilityMod("STR")+e.misc+e.auto+a},$scope.getTotalCMD=function(e){var a=$scope.character.core_conditions.grappled?-2:0;return 10+$scope.getTopBAB()+$scope.getSizeMod($scope.character.basic.size)+$scope.getAbilityMod("STR")+$scope.getAbilityMod("DEX")+e.misc+e.auto+a},$scope.getBothCombatScores=function(e,a){var t=$scope.getTotalCMB(e),s=$scope.getTotalCMD(a),o=$scope.character.core_conditions.grappled?" ("+(parseInt(t)+2)+" grapple)":"",i=$scope.character.core_conditions.grappled?" ("+(parseInt(s)+2)+" grapple)":"";return t+o+" / "+s+i},$scope.getNextXPByLevel=function(){var e=$scope.getTotalLevel();return e>19?"--":$scope.selection.advancement[$scope.character.basic.progression][e]},$scope.getCurrentSpeed=function(){var e=$scope.character.combat.speed.base+$scope.character.combat.speed.auto,a=$scope.character.getArmor();for(var t in a){t=parseInt(t);var s=$scope.character.armor.get(t);s.active&&"Armor"===s.type&&(e-=Math.abs($scope.character.combat.speed.armor))}return $scope.character.core_conditions.haste&&(e+=Math.min(30,e)),$scope.character.core_conditions.entangled&&(e=Math.floor(e/2)),$scope.character.core_conditions.exhausted&&(e=Math.floor(e/2)),e},$scope.getTotalSR=function(){return $scope.character.combat.sr.misc+$scope.character.combat.sr.auto},$scope.getArmorBonus=function(e){var a=0,t=$scope.character.getArmor();for(var s in t){s=parseInt(s);var o=$scope.character.armor.get(s);o.active&&o.type===e&&(a+=o.bonus)}return $scope.character.combat.ac[e.toLowerCase()]=a,a},$scope.getWeaponAtIndex=function(e){var a=$scope.character.getWeapons(),t=a[e];return void 0===t&&(t={name:"Weapon Name",attack_bonus:0,damage_bonus:0,damage_die:"d6"}),t},$scope.getWeaponNameAtIndex=function(e){var a=$scope.character.getWeapons(),t=a[e];return void 0===t&&(t={name:"Select weapon"}),t.name},$scope.getAttackModifier=function(e){if(void 0===e)return null;var a=$scope.character.combat.attack.melee,t="STR";"Ranged"===e.type&&(a=$scope.character.combat.attack.ranged,t="DEX"),t=$scope.getAbilityMod(t);var s=$scope.character.core_conditions.haste?1:0,o=$scope.character.core_conditions.dazzled?-1:0,i=$scope.character.core_conditions.entangled?-2:0,n=$scope.character.core_conditions.frightened?-2:0,r=$scope.character.core_conditions.grappled?-2:0,c=$scope.character.core_conditions.shaken?-2:0,l=$scope.character.core_conditions.sickened?-2:0,d=t+$scope.character.combat.attack.misc+a+e.attack_bonus+s+o+i+n+c+r+l;return d},$scope.getAttackRoll=function(e,a){var t="Two-Weapon Fighting"===$scope.character.combat.style,s=0;-1!==e.weapon&&(a=$scope.character.weapons.get(e.weapon)),t&&(-1===e.weapon?(a=$scope.character.weapons.get($scope.character.combat.mainhand),s=$scope.character.combat.attack.mainhand):(e.weapon===$scope.character.combat.mainhand&&(s=$scope.character.combat.attack.mainhand),e.weapon===$scope.character.combat.offhand&&(s=$scope.character.combat.attack.offhand)));var o=$scope.getAttackModifier(a),i=t?-2:0;return"d20 + "+(o+e.bab+e.attack_bonus+i+s+$scope.character.combat.attack.full)},$scope.getSingleAttackRoll=function(e){var a=$scope.getAttackModifier(e);return"d20 + "+(a+$scope.getTopBAB()+$scope.character.combat.attack.standard)},$scope.getSingleDamageRoll=function(e){var a=$scope.getDamageModifier(e);return e.damage_die+" + "+(a+$scope.character.combat.damage.standard)},$scope.getDamageModifier=function(e){if(void 0===e)return null;var a=$scope.getAbilityMod("STR"),t=$scope.character.core_conditions.sickened?-2:0;"Wielding Two-Handed"===$scope.character.combat.style&&(a=Math.floor(1.5*a));var s=$scope.character.combat.damage.melee;if("Ranged"===e.type){var s=$scope.character.combat.damage.ranged;a=0}var o=a+e.damage_bonus+$scope.character.combat.damage.misc+s+t;return o},$scope.getDamageRoll=function(e,a){var t="Two-Weapon Fighting"===$scope.character.combat.style,s=0;-1!==e.weapon&&(a=$scope.character.weapons.get(e.weapon)),t&&(-1===e.weapon?(a=$scope.character.weapons.get($scope.character.combat.mainhand),s=$scope.character.combat.damage.mainhand):(e.weapon===$scope.character.combat.mainhand&&(s=$scope.character.combat.damage.mainhand),e.weapon===$scope.character.combat.offhand&&(s=$scope.character.combat.damage.offhand)));var o=$scope.getDamageModifier(a);return a.damage_die+" + "+(o+s+$scope.character.combat.damage.full)},$scope.getSpellcasterID=function(e){return _.findWhere($scope.selection.spellClasses,{name:e}).id},$scope.getClassFromSpellcaster=function(e){var a=_.findWhere($scope.selection.spellClasses,{id:e});return void 0!==a?a.name:e},$scope.getNoticeTypeForWeapon=function(e,a,t){var s="Two-Weapon Fighting"===$scope.character.combat.style,o="";-1!==e.weapon&&(a=$scope.character.weapons.get(e.weapon)),s&&(-1===e.weapon?(a=$scope.character.weapons.get($scope.character.combat.mainhand),o="_mainhand"):(e.weapon===$scope.character.combat.mainhand&&(o="_mainhand"),e.weapon===$scope.character.combat.offhand&&(o="_offhand")));var i="Ranged"===a.type?"_with_ranged":"_with_melee";return"full_"+t+i+o},$scope.getNoticeTypeForStandard=function(e,a){return"Ranged"===e.type?"standard_"+a+"_with_ranged":"standard_"+a+"_with_melee"},$scope.getCalculatedCoreConditionsArray=function(e,a){var t=[],s={};s=void 0===a?$scope.data.conditions_by_stat[e]:$scope.data.conditions_by_stat[a][e],s=s||{};for(var o in s)$scope.character.core_conditions[o]&&t.push($scope.getDisplayForValue(s[o])+" from "+o);return t},$scope.getCalculatedCoreConditions=function(e,a){return $scope.getCalculatedCoreConditionsArray(e,a).join(", ")},$scope.getCalculatedConditionsArray=function(e,a){var t=[],s={};s=void 0===a?$scope.data.custom_conditions_by_stat[e]:$scope.data.custom_conditions_by_stat[a][e],s=s||{};for(var o in $scope.character.getConditions()){o=parseInt(o);var i=$scope.character.conditions.get(o);if(i.active)for(var n in $scope.character.getConditionEffects(o)){n=parseInt(n);var r=i.effect.get(n);for(var c in s)s[c]===r.stat&&t.push($scope.getModifierFromFormula(r.formula)+" from "+i.name)}}return t},$scope.getCalculatedConditions=function(e,a){return $scope.getCalculatedConditionsArray(e,a).join(", ")},$scope.getCalculatedAlterationsArray=function(e,a){var t=[],s={};s=void 0===a?$scope.data.alterations_by_stat[e]:$scope.data.alterations_by_stat[a][e]||$scope.data.alterations_by_stat[a],s=s||{};for(var o in s)0!==s[o].value&&t.push($scope.getDisplayForValue(s[o].value)+s[o].text);return t},$scope.getCalculatedAlterations=function(e,a){return $scope.getCalculatedAlterationsArray(e,a).join(", ")},$scope.getCalculatedNotice=function(e,a){var t=$scope.getCalculatedCoreConditionsArray(e,a).concat($scope.getCalculatedConditionsArray(e,a)).concat($scope.getCalculatedAlterationsArray(e,a));return t.join(", ")},$scope.getActiveConditions=function(){var e=$scope.character.getConditions(),a=$scope.character.core_conditions,t=[];for(var s in BTTSheetSchema.core_conditions)a[s]&&t.push(s);for(s in e)e[s].active&&t.push(e[s].name);return t.join(", ")},$scope.getNameForEffectStat=function(e){var a=_.findWhere($scope.selection.conditionStats,{path:e});return a.name},$scope.getModifierFromFormula=function(e){return e.replace(/n|\s/gi,"")},$scope.losesDexBonusToAC=function(){return $scope.character.core_conditions.blinded||$scope.character.core_conditions.cowering||$scope.character.core_conditions.stunned},$scope.isClassSpellcaster=function(e){return void 0!==_.findWhere($scope.selection.spellClasses,{name:e})},$scope.klassDataIsLoaded=function(){return $scope.ready},$scope.shouldShowTwoWeaponFighting=function(){return"Two-Weapon Fighting"===$scope.character.combat.style&&$scope.character.weapons.length>0},$scope.shouldShowAttackForWeapon=function(e,a){return"Two-Weapon Fighting"===$scope.character.combat.style||e.weapon===$scope.character.weapons.indexOf(a)||-1===e.weapon},$scope.getDisplayForValue=function(e){return e>0&&(e="+"+e),e},$scope.anyActiveConditions=function(){var e=$scope.character.getConditions(),a=$scope.character.core_conditions,t=!1;for(var s in e)e[s].active&&(t=!0);for(s in BTTSheetSchema.core_conditions)a[s]&&(t=!0);return t},$scope.reverseFormula=function(e){return e.replace("+","$").replace("-","+").replace("$","-")},$scope.addTwoSpellsPerDay=function(e,a){var t=null,s=parseInt(e),o=parseInt(a),i=a+"",n=""===e,r=null!==i.match(/\+/gi),c=!isNaN(s),l=!isNaN(o),d=c?s:0,p=l?o:0;return t=n?l?o:a:c&&l?s+o:e===a?e:c||l?r?e:d+p:"-"},$scope.validateAndReturnStat=function(e){var a=e.stat.split(/\.|\[|\]/gi),t=!0,s=$scope.character,o="";for(var i in a){var n=a[i];isNaN(parseInt(n))?"number"==typeof s[n]?o=n:void 0!==s[n]&&""===o?s=s[n]:t=!1:(n=parseInt(n),"number"==typeof s.get(n)?o=n:void 0!==s.get(n)&&""===o?s=s.get(n):t=!1)}return t?(e.valid=!0,{obj:s,key:o}):(e.valid=!1,void 0)},$scope.validateAndReturnFormula=function(effect){var formula=effect.formula.replace("n","0"),valid=null!==formula&&""!==formula;if(valid){for(var i=0;formula.length>i;i+=1){var c=formula.charAt(i),isValidCharacter=c.match(/(\+|\-|\s|\d|\.)/gi);isValidCharacter||(valid=!1)}if(valid)try{eval(formula)}catch(err){err&&(valid=!1)}}return null===formula&&(valid=!1),valid?(effect.valid=!0,formula):(effect.valid=!1,void 0)},$scope.isConditionValid=function(e){var a=!0,t=e.effect.asArray();for(var s in t)s=parseInt(s),e.effect.get(s).valid===!1&&(a=!1);return a},$scope.toggleCondition=function(condition){var valid=$scope.isConditionValid(condition),effectArray=condition.effect.asArray();if(valid)if(condition.active)for(var eff in effectArray){eff=parseInt(eff);var thisEffect=condition.effect.get(eff),stat=$scope.validateAndReturnStat(thisEffect),formula=$scope.validateAndReturnFormula(thisEffect);if(void 0!==stat&&void 0!==formula){thisEffect.original=stat.obj[stat.key],formula=thisEffect.formula.replace("n",stat.obj[stat.key]);try{stat.obj[stat.key]=Math.floor(eval(formula))}catch(err){err&&console.log(err)}}else thisEffect.valid=!1,condition.active=!1}else for(var eff in effectArray){eff=parseInt(eff);var thisEffect=condition.effect.get(eff),stat=$scope.validateAndReturnStat(thisEffect),formula=$scope.reverseFormula(thisEffect.formula).replace("n",stat.obj[stat.key]);if(void 0!==stat&&void 0!==formula){thisEffect.original=0;try{stat.obj[stat.key]=Math.floor(eval(formula))}catch(err){err&&console.log(err)}}else thisEffect.valid=!1,condition.active=!1}valid||(condition.active=!1)},$scope.onClassChange=function(e,a){if(!$scope.klassDataIsLoaded())return!1;a=void 0===a?!0:a,e=e||$scope.character.klasses.get($scope.character.klasses.length-1);var t=$scope.data.klass[e.klass];e.level=Math.min(t.levels.length,e.level),$scope.updateSkills(),$scope.updateBABAndSaves(),$scope.updateTotalSpellsPerDay(),$scope.updateSpells(a)},$scope.onLevelChange=function(){return $scope.klassDataIsLoaded()?($scope.updateBABAndSaves(),$scope.updateTotalSpellsPerDay(),$scope.updateSpells(!1),void 0):!1},$scope.updateTotalSpellsPerDay=function(){$scope.character.spells.per_day=["","","","","","","","","",""];var e=$scope.getAllKlassesArray(),a=$scope.getAllLevelsArray(),t=0,s=$scope.getSpellAbilityForKlass();void 0!==$scope.character.abilities[s]&&(t=$scope.getAbilityMod(s));for(var o in e){var i=$scope.data.klass[e[o]];if(void 0===i)return[];var n=i.levels[a[o]-1].spells_per_day;for(var r in $scope.character.spells.per_day)$scope.character.spells.per_day[r]=$scope.addTwoSpellsPerDay($scope.character.spells.per_day[r],n[r])}for(r in $scope.character.spells.per_day){var c=Math.floor((t-r)/4)+1;(0>c||"0"===r)&&(c=0),isNaN(parseInt($scope.character.spells.per_day[r]))||($scope.character.spells.per_day[r]=$scope.character.spells.per_day[r]+c)}return $scope.character.spells.per_day},$scope.updateBABAndSaves=function(){var e=[],a=0,t=0,s=0;for(var o in $scope.character.getKlasses()){var i=$scope.character.klasses.get(parseInt(o)),n=$scope.data.klass[i.klass].levels[i.level-1],r=$scope.getSplitBABs(n.bab);for(var c in r)e[c]=(e[c]||0)+r[c];a+=parseInt(n.fort),t+=parseInt(n.ref),s+=parseInt(n.will)}$scope.character.combat.bab.value=e.join("/"),$scope.character.saves.get(0).base=a,$scope.character.saves.get(1).base=t,$scope.character.saves.get(2).base=s},$scope.updateSkills=function(){var e=$scope.character.getSkills();for(var a in e)$scope.character.skills.get(parseInt(a)).class_skill=!1;for(var t in $scope.character.getKlasses()){var s=$scope.character.klasses.get(parseInt(t)),o=$scope.data.klass[s.klass].skills;for(a in o){var i=_.findWhere(e,{name:o[a]});i.class_skill=!0}}},$scope.updateSpells=function(e){var a="Fighter";for(var t in $scope.character.getKlasses()){var s=$scope.character.klasses.get(parseInt(t)),o=$scope.data.klass[s.klass].levels[s.level-1];$scope.character.spells.known=o.spells_known.length>0?o.spells_known:[],e&&$scope.isClassSpellcaster(s.klass)&&(a=s.klass)}e&&$scope.isClassSpellcaster(a)&&($scope.loadClassSpells($scope.getSpellcasterID(a)),console.log("loading spells for "+a))},$scope.onWeaponsChange=function(){var e=$scope.character.weapons.length;if(e>0){var a=e-1;$scope.character.combat.mainhand=Math.min($scope.character.combat.mainhand,a),$scope.character.combat.offhand=Math.min($scope.character.combat.offhand,a);for(var t in $scope.character.getAttacks()){var s=$scope.character.attacks.get(parseInt(t));s.weapon=Math.min(s.weapon,a)}}else $scope.character.clearAttacks(),$scope.character.combat.offhand="",$scope.character.combat.mainhand=""},$scope.buildAttacks=function(){var e=$scope.getBABs(),a=[];for(var t in e)a.push({attack_bonus:0,weapon:-1,bab:e[t]});$scope.character.all_attacks=a.concat($scope.character.getAttacks()).sort(function(e,a){return a.bab-e.bab})},$scope.$watch("character.combat.bab.value",$scope.buildAttacks),$scope.$watchCollection("character.getAttacks()",$scope.buildAttacks),$scope.$watchCollection("character.getWeapons()",$scope.onWeaponsChange),$scope.$watchCollection("character.getKlasses()",function(){$scope.onClassChange(null,!1)})}]),angular.module("bttControllers").controller("dungeonController",["$scope","$http","$location","$window","$q","bttStorageService",function(e,a,t,s,o,i){var n,r=function(e){var a=o.defer(),t="";return i.setDocumentModel("dungeon","Dungeon"),i.requireAuth(!0,t).then(function(){if(e)a.resolve(i.getDocument(e));else{var t="New Dungeon.btt";a.resolve(i.createDocument(t))}}),a.promise},c=t.absUrl().split("/");c.length>1&&(n=c[4]);var l=r(n);l.then(function(a){if(void 0===a.getModel)return s.location.href="/dungeon/"+a.id,void 0;var t=a.getModel(),o=t.getRoot().get("dungeon");e.dungeon=o,console.log("dungeon loaded"),e.ready=!0},function(e){console.log(e),console.log("Document Load Failed.")}),e.gdoc=l,e.dungeon=BTTDungeonSchema,console.log("schema loaded"),e.allTiles=[{name:"White",num:1},{name:"Black",num:2},{name:"Right Turn",num:4},{name:"Straight",num:5},{name:"T",num:6},{name:"4 Corners",num:7},{name:"2 Corners",num:8},{name:"Pong Left",num:9},{name:"Pong Right",num:10},{name:"One wall",num:11},{name:"Two walls",num:12},{name:"Three Walls",num:13}],e.allFlags=[{name:"None",value:"none"},{name:"Blue",value:"blue"},{name:"Green",value:"green"},{name:"Yellow",value:"yellow"},{name:"Orange",value:"orange"},{name:"Purple",value:"purple"},{name:"Red",value:"red"}],e.rotateClockwise=function(e){var a=parseInt(e.rotate,10);270===a?a=0:a+=90,e.rotate=a},e.nextSource=function(a){return a===e.alltiles.length?1:a+1},e.toggleGlobalFog=function(){e.dungeon.fog=!e.dungeon.fog},e.toggleFog=function(e){e.fog=!e.fog},e.togglePoi=function(e){e.poi=!e.poi},e.addTile=function(){e.dungeon.addTile()}}]);var BattleMapModel=function(){function e(){var e=BTTMapSchema;return e}var a=function(a){var t=gapi.drive.realtime.custom.getModel(this);a||(a=e()),this.version=a.version,this.details=t.create("Details"),this.details.size=t.create("Size"),this.details.size.width=a.details.size.width,this.details.size.height=a.details.size.height,this.details.position=t.create("Position"),this.details.position.top=a.details.position.top,this.details.position.left=a.details.position.left,this.details.active_token=a.details.active_token,this.details.tile_size=a.details.tile_size,this.details.round=a.details.round,this.details.image=a.details.image,this.tokens=t.createList();for(var s in a.tokens){var o=a.tokens[s];this.addToken(o)}this.shapes=t.createList();for(s in a.shapes){var i=a.shapes[s];this.addShape(i)}},t=function(e,a){gapi.drive.realtime.custom.getModel(e);var t={1:function(){},2:function(){},3:function(){},4:function(){},5:function(){},6:function(){e.details.image="";for(var a in e.getShapes()){var t=e.shapes.get(parseInt(a));t.pinned=!1}},7:function(){for(var a in e.getShapes()){var t=e.shapes.get(parseInt(a));t.tiled=!1}},8:function(){for(var a in e.getShapes()){var t=e.shapes.get(parseInt(a));t.fog=!1}for(a in e.getTokens()){var s=e.tokens.get(parseInt(a));s.fog=!1}}};t[a]()},s=function(){var a=e();if(this.version<a.version){console.log("should run migrations");for(var s=1,o=this.version+s,i=o;a.version>=i;i+=s)console.log("i is "+i+", init_version is "+o+", latest version is "+a.version),t(this,i),this.version=i;console.log("version up to date at "+this.version)}else console.log("version "+this.version+" is good")},o=function(){var e=function(e,a){var t=function(){};gapi.drive.realtime.custom.registerType(t,e);for(var s in a){var o=a[s];t.prototype[o]=gapi.drive.realtime.custom.collaborativeField(o)}return t},t=function(){};t=e("BattleMap",["version","details","tokens","shapes"]),e("Details",["size","tile_size","active_token","round","position","image"]),e("Position",["top","left"]),e("Size",["width","height","name"]),e("Token",["size","label","color","image","position","moving","fog","damage","init","status","active"]),e("Shape",["size","round","color","image","position","moving","fog","pinned","tiled"]),gapi.drive.realtime.custom.setInitializer(t,a),gapi.drive.realtime.custom.setOnLoaded(t,s),t.prototype.addToken=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("Token");t.size=a.create("Size"),t.size.width=e.size.width,t.size.height=e.size.height,t.size.name=e.size.name,t.position=a.create("Position"),t.position.top=e.position.top,t.position.left=e.position.left,t.damage=e.damage,t.init=e.init,t.status=e.status,t.active=e.active,t.label=e.label,t.color=e.color,t.moving=e.moving,t.image=e.image,t.fog=e.fog,this.tokens.push(t)},t.prototype.getTokens=function(){return this.tokens.asArray()},t.prototype.addShape=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("Shape");t.size=a.create("Size"),t.size.width=e.size.width,t.size.height=e.size.height,t.position=a.create("Position"),t.position.top=e.position.top,t.position.left=e.position.left,t.round=e.round,t.color=e.color,t.moving=e.moving,t.image=e.image,t.pinned=e.pinned,t.tiled=e.tiled,t.fog=e.fog,this.shapes.push(t)},t.prototype.getShapes=function(){return this.shapes.asArray()}};return o.prototype={constructor:o},o}(),CharacterModelPathfinder=function(){function e(){var e=BTTSheetSchema;return e}var a=function(e,a){var t=function(){};gapi.drive.realtime.custom.registerType(t,e);for(var s in a){var o=a[s];t.prototype[o]=gapi.drive.realtime.custom.collaborativeField(o)}return t},t=function(a){var t=gapi.drive.realtime.custom.getModel(this);a||(a=e()),this.name=a.name,this.version=a.version,this.basic=t.create("Basic"),this.basic.size=a.basic.size,this.basic.race=a.basic.race,this.basic.xp=a.basic.xp,this.basic.xp_next=a.basic.xp_next,this.basic.progression=a.basic.progression,this.klasses=t.createList();for(var s in a.klasses){var o=a.klasses[s];this.addKlass(o)}this.profile=t.createList();for(s in a.profile){var i={name:a.profile[s].name,value:a.profile[s].value};this.addProfile(i)}this.abilities=t.create("Abilities");for(s in a.abilities)this.abilities[s]=t.create("Stat"),this.abilities[s].misc=0,this.abilities[s].mod=0,this.abilities[s].auto=0,this.abilities[s].value=10;this.saves=t.createList();for(s in a.saves){var n=a.saves[s];this.addSave(n)}this.combat=t.create("Combat"),this.combat.hp=t.create("HP"),this.combat.hp.value=a.combat.hp.value,this.combat.hp.damage=a.combat.hp.damage,this.combat.hp.misc=a.combat.hp.misc,this.combat.hp.auto=a.combat.hp.auto,this.combat.dr=t.create("SingleValue"),this.combat.dr.value=a.combat.dr.value,this.combat.sr=t.create("ValueAuto"),this.combat.sr.value=a.combat.sr.value,this.combat.sr.auto=a.combat.sr.auto,this.combat.speed=t.create("Speed"),this.combat.speed.base=a.combat.speed.base,this.combat.speed.armor=a.combat.speed.armor,this.combat.speed.fly=a.combat.speed.fly,this.combat.speed.swim=a.combat.speed.swim,this.combat.speed.climb=a.combat.speed.climb,this.combat.speed.burrow=a.combat.speed.burrow,this.combat.speed.auto=a.combat.speed.auto,this.combat.init=t.create("MiscAuto"),this.combat.init.misc=a.combat.init.misc,this.combat.init.auto=a.combat.init.auto,this.combat.ac=t.create("AC"),this.combat.ac.armor=a.combat.ac.armor,this.combat.ac.shield=a.combat.ac.shield,this.combat.ac.natural=a.combat.ac.natural,this.combat.ac.deflection=a.combat.ac.deflection,this.combat.ac.misc=a.combat.ac.misc,this.combat.ac.auto=a.combat.ac.auto,this.combat.bab=t.create("SingleValue"),this.combat.bab.value=a.combat.bab.value,this.combat.cmb=t.create("MiscAuto"),this.combat.cmb.misc=a.combat.cmb.misc,this.combat.cmb.auto=a.combat.cmb.auto,this.combat.cmd=t.create("MiscAuto"),this.combat.cmd.misc=a.combat.cmd.misc,this.combat.cmd.auto=a.combat.cmd.auto,this.combat.attack=t.create("Damage"),this.combat.attack.melee=a.combat.attack.melee,this.combat.attack.ranged=a.combat.attack.ranged,this.combat.attack.misc=a.combat.attack.misc,this.combat.attack.full=a.combat.attack.full,this.combat.attack.standard=a.combat.attack.standard,this.combat.attack.mainhand=a.combat.attack.mainhand,this.combat.attack.offhand=a.combat.attack.offhand,this.combat.damage=t.create("Damage"),this.combat.damage.misc=a.combat.damage.misc,this.combat.damage.melee=a.combat.damage.melee,this.combat.damage.ranged=a.combat.damage.ranged,this.combat.damage.full=a.combat.damage.full,this.combat.damage.standard=a.combat.damage.standard,this.combat.damage.mainhand=a.combat.damage.mainhand,this.combat.damage.offhand=a.combat.damage.offhand,this.combat.style=a.combat.style,this.combat.offhand=a.combat.offhand,this.combat.mainhand=a.combat.mainhand,this.combat.all_saves=a.combat.all_saves,this.combat.all_skills=a.combat.all_skills,this.prefs=t.create("Preferences"),this.prefs.tab=a.prefs.tab,this.prefs.help=a.prefs.help,this.skills=t.createList();for(s in a.skills){var r=a.skills[s];this.addSkill(r)}this.weapons=t.createList(),this.armor=t.createList(),this.lists=t.createList();for(s in a.lists){var c=a.lists[s];this.addList(c)}this.consumables=t.createList(),this.custom_stats=t.createList(),this.spells=t.create("Spells"),this.spells.spellbook=t.createList();for(s in a.spells.spellbook)this.addSpellLevel();this.feats=t.createList(),this.conditions=t.createList(),this.core_conditions=t.create("CoreConditions");for(s in a.core_conditions)this.core_conditions[s]=!1;this.attacks=t.createList()},s=function(e,a){gapi.drive.realtime.custom.getModel(e);var t={0:function(){},1:function(){}};t[a]()},o=function(){var a=e();if(this.version<a.version){console.log("should run migrations");for(var t=1,o=this.version+t,i=o;a.version>=i;i+=t)console.log("i is "+i+", init_version is "+o+", latest version is "+a.version),s(this,i),this.version=i;console.log("version up to date at "+this.version)}else console.log("version "+this.version+" is good")},i=function(){var e=function(){},s={registered_character:a("Character",["name","version","basic","klasses","profile","abilities","saves","combat","skills","weapons","armor","lists","consumables","custom_stats","spells","feats","conditions","core_conditions","attacks","prefs"]),registered_basic:a("Basic",["xp","xp_next","progression","race","size"]),registered_klass:a("Klass",["klass","level"]),registered_nameValue:a("NameValue",["name","value"]),registered_singleValue:a("SingleValue",["value"]),registered_singleMisc:a("SingleMisc",["misc"]),registered_miscAuto:a("MiscAuto",["misc","auto"]),registered_valueAuto:a("ValueAuto",["value","auto"]),registered_abilities:a("Abilities",["STR","DEX","CON","INT","WIS","CHA"]),registered_stat:a("Stat",["misc","value","mod","auto"]),registered_save:a("Save",["name","misc","base","ability","auto"]),registered_combat:a("Combat",["hp","dr","sr","speed","init","ac","bab","cmb","cmd","attack","damage","style","all_saves","all_skills","offhand","mainhand"]),registered_hp:a("HP",["value","damage","misc","auto"]),registered_speed:a("Speed",["base","armor","fly","swim","climb","burrow","auto"]),registered_ac:a("AC",["armor","shield","natural","deflection","misc","auto"]),registered_damage:a("Damage",["misc","melee","ranged","full","standard","mainhand","offhand"]),registered_skill:a("Skill",["name","ability","ranks","misc","class_skill","auto"]),registered_weapon:a("Weapon",["name","attack_bonus","damage_bonus","crit_range","crit_mult","type","range","ammo","damage_die","misfire"]),registered_armor:a("Armor",["name","bonus","type","dex","penalty","failure","weight","properties","active"]),registered_feat:a("Feat",["name","summary","prereq","text"]),registered_listicle:a("Listicle",["name","content","overview"]),registered_listItem:a("ListItem",["name","text"]),registered_consumable:a("Consumable",["name","text","amount"]),registered_spells:a("Spells",["spellbook"]),registered_spell:a("Spell",["level","name","description","descriptor","short_description","id","source","remaining","prepared","level_string","class_levels","elements","restrictions","casting"]),registered_spellClasses:a("SpellClasses",["alchemist","antipaladin","bard","cleric","druid","inquisitor","magus","oracle","paladin","ranger","sor","summoner","witch","wiz"]),registered_spellRestrictions:a("SpellRestrictions",["deity","area","divine_focus","domain","school","subschool","language_dependent"]),registered_spellCasting:a("SpellCasting",["casting_time","components","costly_components","duration","effect","range","saving_throw","spell_resistance","targets"]),registered_condition:a("Condition",["name","description","active","source","effect"]),registered_conditionEffect:a("ConditionEffect",["stat","formula","original","valid"]),registered_coreConditions:a("CoreConditions",["blinded","confused","entangled","exhausted","fatigued","frightened","grappled","haste","nauseated","panicked","paralyzed","pinned","shaken","sickened","staggered","stunned","cowering","dazed","dazzled","deafened","fascinated"]),registered_new_attack:a("Attack",["attack_bonus","weapon","bab"]),registered_preferences:a("Preferences",["tab","help"])};
e=s.registered_character,gapi.drive.realtime.custom.setInitializer(e,t),gapi.drive.realtime.custom.setOnLoaded(e,o),e.prototype.addKlass=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("Klass");e=e||{klass:"Fighter",level:1},t.klass=e.klass,t.level=e.level,this.klasses.push(t)},e.prototype.getKlasses=function(){return this.klasses.asArray()},e.prototype.addProfile=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("NameValue");t.name=e.name,t.value=e.value,this.profile.push(t)},e.prototype.getProfiles=function(){return this.profile.asArray()},e.prototype.addSave=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("Save");t.name=e.name,t.misc=e.misc,t.base=e.base,t.ability=e.ability,t.auto=e.auto,this.saves.push(t)},e.prototype.getSaves=function(){return this.saves.asArray()},e.prototype.addSkill=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("Skill");t.name=e.name,t.ability=e.ability,t.ranks=e.ranks,t.misc=e.misc,t.class_skill=e.class_skill,t.auto=e.auto,this.skills.push(t)},e.prototype.getSkills=function(){return this.skills.asArray()},e.prototype.addWeapon=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("Weapon");e=e||{name:"Weapon Name",attack_bonus:0,damage_bonus:0,crit_range:"19-20",crit_mult:"x2",type:"--",range:"",ammo:"",damage_die:"",misfire:""},t.name=e.name,t.attack_bonus=e.attack_bonus,t.damage_bonus=e.damage_bonus,t.crit_range=e.crit_range,t.crit_mult=e.crit_mult,t.type=e.type,t.range=e.range,t.ammo=e.ammo,t.damage_die=e.damage_die,t.misfire=e.misfire,this.weapons.push(t)},e.prototype.getWeapons=function(){return this.weapons.asArray()},e.prototype.addArmor=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("Armor");e=e||{name:"Armor Name",bonus:0,type:"Armor",dex:20,penalty:0,failure:"--",weight:"",properties:"",active:!1},t.name=e.name,t.bonus=e.bonus,t.type=e.type,t.dex=e.dex,t.penalty=e.penalty,t.failure=e.failure,t.weight=e.weight,t.properties=e.properties,t.active=e.active,this.armor.push(t)},e.prototype.getArmor=function(){return this.armor.asArray()},e.prototype.addFeatText=function(e,a){gapi.drive.realtime.custom.getModel(this),e.push(a)},e.prototype.getFeatTexts=function(e){return this.feats.get(e).text.asArray()},e.prototype.addFeat=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("Feat");t.name=e.name,t.summary=e.summary,t.prereq=e.prereq,t.text=a.createList();for(var s in e.text){var o=a.create("ListItem");o.name=e.text[s].name,o.text=e.text[s].text,this.addFeatText(t.text,o)}this.feats.push(t)},e.prototype.getFeats=function(){return this.feats.asArray()},e.prototype.addList=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("Listicle");e=e||{name:"",overview:!1,content:[]},t.name=e.name,t.overview=e.overview,t.content=a.createList();for(var s in e.content)this.addListItem(t.content,e.content[s]);this.lists.push(t)},e.prototype.getLists=function(){return this.lists.asArray()},e.prototype.addConsumable=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("Consumable");e=e||{name:"",text:"",amount:1},t.name=e.name,t.text=e.text,t.amount=e.amount,this.consumables.push(t)},e.prototype.getConsumables=function(){return this.consumables.asArray()},e.prototype.addListItem=function(e,a){var t=gapi.drive.realtime.custom.getModel(this),s=t.create("ListItem");a=a||{name:"",text:""},s.name=a.name,s.text=a.text,e.push(s)},e.prototype.getListItems=function(e){return this.lists.get(e).content.asArray()},e.prototype.getCustomStats=function(){return this.custom_stats.asArray()},e.prototype.addCustomStat=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("NameValue");e=e||{name:"",value:0},t.name=e.name,t.value=e.value,this.custom_stats.push(t)},e.prototype.addCondition=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("Condition");e=e||{name:"",description:"",active:!1,source:"user",effect:[]},t.name=e.name,t.description=e.description,t.active=e.active,t.source=e.source,t.effect=a.createList();for(var s in e.effect)this.addConditionEffect(t.effect,e.effect[s]);this.conditions.push(t)},e.prototype.getConditions=function(){return this.conditions.asArray()},e.prototype.addConditionEffect=function(e,a){var t=gapi.drive.realtime.custom.getModel(this),s=t.create("ConditionEffect");a=a||{stat:"abilities.STR.auto",formula:"",original:0,valid:!0},s.stat=a.stat,s.formula=a.formula,s.original=a.original,s.valid=a.valid,e.push(s)},e.prototype.getConditionEffects=function(e){return this.conditions.get(e).effect.asArray()},e.prototype.getAttacks=function(){return this.attacks.asArray()},e.prototype.clearAttacks=function(){return this.attacks.clear()},e.prototype.addAttack=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("Attack");e=e||{attack_bonus:0,weapon:"",bab:1},t.attack_bonus=e.attack_bonus,t.weapon=e.weapon,t.bab=e.bab,this.attacks.push(t)},e.prototype.addSpellLevel=function(){var e=gapi.drive.realtime.custom.getModel(this),a=e.createList();this.spells.spellbook.push(a)},e.prototype.getSpellLevels=function(){return this.spells.spellbook.asArray()},e.prototype.addSpellElement=function(e,a){gapi.drive.realtime.custom.getModel(this),e.push(a)},e.prototype.getSpellElements=function(e){return e.elements.asArray()},e.prototype.addSpell=function(e,a){var t=gapi.drive.realtime.custom.getModel(this),s=t.create("Spell");s.level=a.level,s.name=a.name,s.description=a.description,s.descriptor=a.descriptor,s.short_description=a.short_description,s.id=a.id,s.source=a.source,s.remaining=a.remaining,s.prepared=a.prepared,s.level_string=a.level_string,s.class_levels=t.create("SpellClasses"),s.class_levels.alchemist=a.class_levels.alchemist,s.class_levels.antipaladin=a.class_levels.antipaladin,s.class_levels.bard=a.class_levels.bard,s.class_levels.cleric=a.class_levels.cleric,s.class_levels.druid=a.class_levels.druid,s.class_levels.inquisitor=a.class_levels.inquisitor,s.class_levels.magus=a.class_levels.magus,s.class_levels.oracle=a.class_levels.oracle,s.class_levels.paladin=a.class_levels.paladin,s.class_levels.ranger=a.class_levels.ranger,s.class_levels.sor=a.class_levels.sor,s.class_levels.summoner=a.class_levels.summoner,s.class_levels.witch=a.class_levels.witch,s.class_levels.wiz=a.class_levels.wiz,s.elements=t.createList();for(var o in a.elements){var i=a.elements[o];this.addSpellElement(s.elements,i)}s.restrictions=t.create("SpellRestrictions"),s.restrictions.deity=a.restrictions.deity,s.restrictions.area=a.restrictions.area,s.restrictions.divine_focus=a.restrictions.divine_focus,s.restrictions.domain=a.restrictions.domain,s.restrictions.school=a.restrictions.school,s.restrictions.subschool=a.restrictions.subschool,s.restrictions.language_dependent=a.restrictions.language_dependent,s.casting=t.create("SpellCasting"),s.casting.casting_time=a.casting.casting_time,s.casting.components=a.casting.components,s.casting.costly_components=a.casting.costly_components,s.casting.duration=a.casting.duration,s.casting.effect=a.casting.effect,s.casting.range=a.casting.range,s.casting.saving_throw=a.casting.saving_throw,s.casting.spell_resistance=a.casting.spell_resistance,s.casting.targets=a.casting.targets,e.push(s)},e.prototype.getSpells=function(e){var a=this.spells.spellbook.asArray();return a[e].asArray()}};return i.prototype={constructor:i},i}(),DungeonModel=function(){function e(){var e=BTTDungeonSchema;return e}var a=function(a){var t=gapi.drive.realtime.custom.getModel(this);a||(a=e()),this.name=a.name,this.fog=a.fog,this.tiles=t.createList();for(var s=0;10>s;s++)for(var o=0;16>o;o++)this.addTile({src:1,rotate:0,poi:!1,fog:!0,flag:"none",position:{top:100*o,left:100*s}})},t=function(){var e=function(e,a){var t=function(){};gapi.drive.realtime.custom.registerType(t,e);for(var s in a){var o=a[s];t.prototype[o]=gapi.drive.realtime.custom.collaborativeField(o)}return t},t=function(){};t=e("Dungeon",["name","fog","tiles"]),e("Tile",["src","rotate","position","fog","poi","flag"]),gapi.drive.realtime.custom.setInitializer(t,a),t.prototype.addTile=function(e){var a=gapi.drive.realtime.custom.getModel(this),t=a.create("Tile");e=e||{src:1,rotate:0,poi:!1,fog:!0,flag:"none",position:{top:0,left:0}},t.position=a.create("Position"),t.position.top=e.position.top,t.position.left=e.position.left,t.src=e.src,t.fog=e.fog,t.poi=e.poi,t.flag=e.flag,t.rotate=e.rotate,this.tiles.push(t)},t.prototype.getTiles=function(){return this.tiles.asArray()}};return t.prototype={constructor:t},t}();angular.module("beyondtabletop").factory("bttMainSerivce",["$http",function(){var e={serviceTypes:[],adminUsers:[],dropdown:{}};return e.getBadgeClass=function(e){var a={Admin:"badge-important","Plan Manager":"badge-magenta",Planner:"badge-warning",Mentor:"badge-yellow",Affiliate:"badge-pink",Client:"badge-success","Client Restricted":"badge-lime",Owner:"badge-success"};return a[e]},e}]),function(){angular.module("bttServices").service("bttStorageService",["$q","$rootScope","config",function(e,a,t){var s={documentModel:{name:"character",type:"Character"}};this.id=null,this.document=null,this.closeDocument=function(){this.document.close(),this.document=null,this.id=null},this.getDocument=function(a){return this.id===a?e.when(this.document):(this.document&&this.closeDocument(),this.load(a))},this.createDocument=function(t){var s=e.defer(),o=function(e){e&&!e.error?s.resolve(e):s.reject(e),a.$digest()};return gapi.client.drive.files.insert({resource:{mimeType:"application/vnd.google-apps.drive-sdk",title:t}}).execute(o),s.promise},this.requireAuth=function(){var s=gapi.auth.getToken(),o=Date.now()/1e3;if(s&&s.expires_at-o>60)return e.when(s);var i={client_id:t.clientId,scope:t.scopes,immediate:!0},n=e.defer();gapi.auth.authorize(i,function(e){e&&!e.error?(n.resolve(e),a.$digest()):r()});var r=function(){gapi.auth.authorize({client_id:t.clientId,scope:t.scopes,immediate:!1},function(e){e&&!e.error?n.resolve(e):n.reject(e),a.$digest()})};return n.promise},this.load=function(t,o){var i=e.defer(),n=function(e){var a=e.create(s.documentModel.type);e.getRoot().set(s.documentModel.name,a)},r=function(e){var a=e.getModel(),r=a.getRoot().get(s.documentModel.name);r||n(a),this.setDocument(t,e),i.resolve(e),o&&o(e)}.bind(this),c=function(e){e.type===gapi.drive.realtime.ErrorType.TOKEN_REFRESH_REQUIRED?(a.$emit("btt.token_refresh_required"),a.error=!0):e.type===gapi.drive.realtime.ErrorType.CLIENT_ERROR?(a.$emit("btt.client_error"),a.error=!0):e.type===gapi.drive.realtime.ErrorType.NOT_FOUND?(i.reject(e),a.$emit("btt.not_found",t),a.error=!0):e.type===gapi.drive.realtime.DocumentClosedError&&(a.error=!0),a.$digest()};return gapi.drive.realtime.load(t,r,n,c),i.promise},this.changeListener=function(e){e.isLocal||a.$digest()},this.setDocument=function(e,a){a.getModel().getRoot().addEventListener(gapi.drive.realtime.EventType.OBJECT_CHANGED,this.changeListener),this.document=a,this.id=e},this.setDocumentModel=function(e,a){s.documentModel={name:e,type:a}},this.listPermissions=function(e,a){gapi.client.drive.permissions.list({fileId:e}).execute(function(e){a(e.items)})}}])}(),angular.module("bttDirectives").directive("btBlurChange",function(){var e=function(e,a,t,s){"radio"!==t.type&&"checkbox"!==t.type&&(a.off("input").off("keydown").off("change"),a.on("blur",function(){e.$apply(function(){s.$setViewValue(a.val())})}))},a={replace:!1,transclude:!1,require:"ngModel",restrict:"A",scope:!1,link:e};return a}),angular.module("bttDirectives").directive("btDisableOnClick",function(){var e=function(e,a){a.on("click",function(){a.addClass("disabled").prop("disabled","disabled")})},a={replace:!1,transclude:!1,restrict:"A",scope:!1,link:e};return a}),angular.module("bttDirectives").directive("btDungeonTile",function(){var e=function(e,a){a.draggable({grid:[100,100],stop:function(a,t){e.btDungeonTile.position=t.position}})},a={replace:!1,transclude:!1,restrict:"A",scope:{btDungeonTile:"="},link:e};return a}),angular.module("bttDirectives").directive("btEditSpell",function(){var e=function(e,a){a.on("click",function(){a.parent().parent().toggleClass("editing").removeClass("active")})},a={replace:!1,transclude:!1,restrict:"A",scope:!1,link:e};return a}),angular.module("bttDirectives").directive("btMap",function(){var e=function(e,a){a.draggable({stop:function(t,s){var o=$(window).height()-e.battlemap.details.size.height,i=$(window).width()-e.battlemap.details.size.width;e.locals.current_position=s.position,s.position.top>0&&(e.locals.current_position.top=0,a.css({top:0})),s.position.left>0&&(e.locals.current_position.left=0,a.css({left:0})),o>s.position.top&&(e.locals.current_position.top=o,a.css({top:o})),i>s.position.left&&(e.locals.current_position.left=i,a.css({left:i}))}})},a={replace:!1,transclude:!1,restrict:"A",scope:!1,link:e};return a}),angular.module("bttDirectives").directive("btMapShape",function(){var e=function(e,a){var t={grid:[40,40],start:function(){e.btMapShape.moving=!0},stop:function(a,t){e.btMapShape.moving=!1,e.btMapShape.position=t.position}},s={grid:[40,40],stop:function(a,t){e.btMapShape.size=t.size}};a.draggable(t).resizable(s),e.$watch("btMapShape.pinned",function(){e.btMapShape.pinned?a.draggable("disable").resizable("disable"):a.draggable("enable").resizable("enable")})},a={replace:!1,transclude:!1,restrict:"A",scope:{btMapShape:"="},link:e};return a}),angular.module("bttDirectives").directive("btMapToken",function(){var e=function(e,a){a.draggable({grid:[40,40],start:function(a,t){e.btMapToken.moving=!0,$("#token-drag-distance").css({top:40*Math.round(t.position.top/40)+"px",left:40*Math.round(t.position.left/40)+"px"})},stop:function(a,t){e.btMapToken.moving=!1,e.btMapToken.position=t.position,$("#token-drag-distance").text("")},drag:function(a,t){var s=Math.abs(e.btMapToken.position.top-t.position.top)/40,o=Math.abs(e.btMapToken.position.left-t.position.left)/40,i=Math.max(s,o),n=Math.floor(Math.min(s,o)/2),r=i+n;$("#token-drag-distance").text(r)}})},a={replace:!1,transclude:!1,restrict:"A",scope:{btMapToken:"="},link:e};return a}),angular.module("bttDirectives").directive("btSelectWrap",function(){var e=function(e,a,t){var s=t.btSelectWrap;""===s&&(s="abilities.STR.auto");var o=_.findWhere(e.selection.conditionStats,{path:s});s=o.name,a.find("label").text(s),a.find("select").on("change",function(){$(this).parent().find("label").text($(this).find("option:selected").text())})},a={replace:!1,transclude:!1,restrict:"A",$scope:!1,link:e};return a}),angular.module("bttDirectives").directive("btShowDetails",function(){var e=function(e,a){a.on("click",function(){a.parent().parent().toggleClass("active").removeClass("editing")})},a={replace:!1,transclude:!1,restrict:"A",scope:!1,link:e};return a}),angular.module("bttDirectives").directive("btSortSpells",function(){var e=function(e,a){a.on("click",function(){var t=a.data("klass"),s=a.data("sort");console.log("Directive sort: "+s),e.$apply(function(){e.spells=sortDefault(e.spells,t)})})},a={replace:!1,transclude:!1,restrict:"A",scope:!1,link:e};return a}),angular.module("bttDirectives").directive("btToggleActive",function(){var e=function(e,a){a.on("click",function(){a.toggleClass("active")})},a={replace:!1,transclude:!1,restrict:"A",scope:!1,link:e};return a}),angular.module("bttDirectives").directive("btToggleSpellLevel",function(){var e=function(e,a){a.on("click",function(){a.parent().parent().toggleClass("spells-showing spells-hiding")})},a={replace:!1,transclude:!1,restrict:"A",scope:!1,link:e};return a}),angular.module("bttDirectives").directive("moDeleteClient",[function(){var e=function(e,a){var t=$(a);t.on("click",function(e){e.preventDefault()})},a={replace:!1,transclude:!1,restrict:"A",scope:{},link:e};return a}]);